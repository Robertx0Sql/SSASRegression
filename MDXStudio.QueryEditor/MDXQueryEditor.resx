<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageListIntellisense.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageListIntellisense.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABe
        DwAAAk1TRnQBSQFMAgEBCgEAAYABAAGAAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAATADAAEBAQABCAYAAQwYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/0EAAesEEwISBRMEAAHr
        BBMCEgUTJAABvAf/AfQCGQG1BAABvAf/AfQCGQG1JAABvAH/ArUB/wW1ARkBtQQAAbwB/wK1Af8FtQEZ
        AbUkAAG8Bf8C9AMZAfcEAAG8Bf8C9AMZAfckAAG8Af8CtQH/BbUBGQH3BAABvAH/ArUB/wW1ARkB9yQA
        AbwH/wH0AhkB9wQAAbwH/wH0AhkB9yQAAbwH/wHzASIB9AH3AwAB9AG8B/8B8wEiAfQB9wMAAfQgAAG8
        A/8BvAHsAf8B9AHqAVkBDgHvAgAB8AFJAbwD/wG8AewB/wH0AeoBWQEOAe8CAAHwAUkgAAG8A/8BHAF0
        AewB6wF5ARIBWQEOASIBEgFtAU8BvAP/ARwBdAHsAesBeQESAVkBDgEiARIBbQFPIAABvAP/AfABeQFz
        AXQB6gHlARQBWQExASoBEgFPAbwD/wHwAXkBcwF0AeoB5QEUAVkBMQEqARIBTyAAAbUE3QG8AZkBbgGa
        ARQB5QJZATIBcwFPAbUE3QG8AZkBbgGaARQB5QJZATIBcwFPJgABBwGaAUoBmgJ6AlkBcwFQBgABBwGa
        AUoBmgJ6AlkBcwFQJwAB7wGZAXoBmgJ6AXMB9wGYBwAB7wGZAXoBmgJ6AXMB9wGYKAADHAHtAewC7wGS
        CAADHAHtAewC7wGShgABGgF0AkoBGhkAAbULFRQAARoCdAE4AjECSgEaFwABtQK8AfIBBwHyAQcB8gEH
        AZkB7wEVBQABCQHPAqcBzwEJBwABGgJ0A1kDMQEwAkoBGhUAAbUBvAH/AWUB/wFlAf8BZQEbASUBBwEV
        BAABzwGnBIYBpwGtBQACdAF6BFkEMQEwASoBSgEqFAABtQK8Af8BvAH/AbwB/wG8ARoBBwEVAwABtAOn
        BIYBpwGtBAABdAN6A1kFMQEwASoBKQgAAQUBAAEFCQAB7wG8Af8BZQH/AWUB/wFlARsBJQEHARUCAAHd
        As8BrQGnBYYBpwEJAwABdAGaA3oCWQYxATABKQcAAQUB/QEAAgUEAAMnAQAB7wm8AQcBFQIAAQkCtALP
        Aa0FhgHPAwABdAKaA3oBWQE4ATcFMQEpBgABBQH9AQAB/QEAAQUEAAECAVUBJwEAAe8BvAYVArwBBwEV
        AgAB1gG1AtYCtAGtBIYBpwMAAXQBoAKaA3oCOAE3BDEBKQYAAf0BAAH9AQUB/QUAAS4BVgEnAQABuwq8
        ARUCAALWAQkCGQEJAdYBrQOGAacDAAF0AqABmgN6ATECOAQxASkHAAH9AQUB/QEFAf0EAAEuAZcBAgEA
        A+8HtQLvAgACCQEZAfQCGQHWAq0ChgHPAwABdAOgAZoBWQE3ARoCMQE4ATcCMQEpBgAB/QEFAf0BBQH9
        BQABVQIuAQABtQHdAc8BAAEjATIBJAcAARkBCQEZAv8BGQEJAq0BpwGGAQkDAAF0AqACWQLDAhoBmgIx
        ATcBMQEpBwAB/QEFAf0KAAO1AQABKgEyASQIAAHdAQkC3QEJAdYBtAGtAacBzwQAAXQCWQTDARoBoAOa
        AjEBKQgAAf0PAAEqAVMBIwkAAd0BCQLWAbQBzwGtAbQFAAF0ASoFwwEaAaABGgOaASoBKRgAATEBegEr
        CgABGQEJAdYBtAHWAd0HAAGaAioDwwEaAaABGgGaAioBmhkAATEBegErGQABmgIqAcMCGgIqAZobAAIy
        ASsbAAGaAyoBmiEAAW0B7UMAAbUDrgEAAbUDrgEAAbUDri0AARIB7QMAAQkCtQGuAQABCQK1Aa4BAAEJ
        ArUBrhQAAycBAAOGAQADJBMAAQkCtQGuAQABCQK1Aa4BAAEJArUBrhQAAQIBVQEnAQABzwG1AYYBAAEj
        ATIBJBMAAwkBtQEAAwkBtQEAAwkBtRQAAS4BVgEnAQABtAEJAa0BAAEqATIBJDUAAS4BlwECAQABtQEJ
        Ac8BAAEqAVMBIxUAAbUDrgEAAbUDrhcAAVUCLgEAAbUB3QHPAQABIwEyASQVAAEJArUBrgEAAQkCtQGu
        CAABtQKuAQABtQKuDAADtQEAASoBMgEkFQABCQK1Aa4BAAEJArUBrggAAQkBtQGuAQABCQG1Aa4QAAEq
        AVMBIxUAAwkBtQEAAwkBtQgAAgkBtQEAAgkBtRAAATEBegErPQABMQF6ASsYAAG1A64hAAIyASsDAAES
        AQABbRIAAQkCtQGuJwAB7QEAAe0SAAEJArUBrjwAAwkBtWYAAUIBTQE+BwABPgMAASgDAAFAAwABMAMA
        AQEBAAEBBQABgAEBFgAD/wEABP8FAAEPAQABDwUAAQ8BAAEPBQABDwEAAQ8FAAEPAQABDwUAAQ8BAAEP
        BQABDwEAAQ8FAAEOAQABDgUAAQwBAAEMHAAB/AEAAfwFAAH+AQAB/gUAAf8BAAH/BQAE/wQABP8B/AEf
        Av8B8AEAAv8B8AEHAv8B8AEAAfgBHwHAAQEB/wG/AfABAAHwAQ8BgAEAAf8BHwHwAQAB4AEHAYABAAH+
        AQ8B8AEAAcABAwGAAQAB/AEHARABAAHAAQMBgAEAAfgBBwEQAQABwAEDAYABAAH4AQcBEAEAAcABAwGA
        AQAB+AEHARABAAHAAQMBgAEAAfgBDwERAR8BwAEDAYABAAH8AR8B8QEfAeABBwGAAQAB/gE/Af8BHwHw
        AQ8BgAEAAf8BfwH/AR8B+AEfAcABAQP/AR8C/wHwAQcD/wEfAv8B/AEfA/8B8wb/AcABAQGEASEE/wHP
        AfMBhAEhAv8B4gEjAdcB/wGEASEC/wHiASMB2wH/AYQBIQL/AeIBIwHdBf8B4gEjAd4B/wHhAQ8C/wHi
        ASMB3wF/AeEBDwHxAR8B/gEjAd8BvwHhAQ8B8QEfAf8B4wLfAeEBDwHxAR8B/wHjAd8B6wX/AeMB3wHz
        AfwBPwP/AeMBjwHjAfwBPwT/AY8B/wH8AT8E/wHfAf8B/AE/DP8L
</value>
  </data>
</root>